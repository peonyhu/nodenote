常见的问题珠峰
study.zhufengpeixun.cn
school.zhufengpeixun.cn
什么是node？
    node是javascript语言的服务器运行环境
    node提供大量的工具库，使得javascript可以调用操作系统级别的API(例如系统文件)
    ndoe内部采用google公司的v8引擎，作为javascript语言解析器，速度非常快
    node是一个基于事件驱动和异步I/O的服务端javascript环境

什么是事件驱动？
    有事件才会动，这样可以节约能量
什么是异步I/O?
    就是异步传输(异步输入输出)
Atwood定律
    Atwood's Law(Atwood定律)是Jeff Atwood在2007年提出的
    “所有应用都可以使用javascript来写，所有事情都可以通过浏览器完成”。

node
    项目管理
        npm(包管理器) grunt(打包工具) gulp brower(前端框架管理器) yeoman(项目生成器)
    桌面应用
        node-webkit
node官网  安装到别的路径需要手动把路径安装到环境变量中
中国最专业的node社区
cnodejs.org
npm官网   可以搜索需要的模块，以及模块的使用说明，参考别人的额资源
github  可以找到大量的nodejs相关的项目，阅读源码，查看新技术的一手资料
stackoverflow 遇到解决不了的问题可以在此提问，会有很多热情的好友来帮你解答问题的，比如服务议程、配置什么的
中国的网站
segmentfault

webstorm
到达一个文件夹的下面按住shift点击鼠标右键可以出现cmd命令行

ES5,ES6,ES7的区别(自己查下)
学习markdown  可以写ppt

模块
    每个js文件都是一个模块，模块内部声明的变量都是私有变量，外部无法访问(所以不用担心命名冲突的问题)

创建模块
    math.js
导出模块
    exports.add = function(a,b){return a+b;}
加载模块(这是在另一个js中写的)
    var math = require('./math');
调用模块(这是在另一个js中写的)
    var sum = math.add(1,2);

全栈工程师
    也叫全端工程师。是指掌握多种技能，并能利用多种技能独立完成产品的人

技术栈
    界面设计    AXure
    前端开发    HTML5+CSS3
    后端开发    Node.js Express Koa
    数据库      Mysql Mongodb  Redis
    移动端      Ionic
    Restful API
    OAuth QQ第三方认证
    单页应用    AngularJs
    WebSocket
    微信开发
    设计模式
node基础
Javascript高级
    面向对象
    闭包
    作用域
    this
    执行上下文
Node常用库与框架
http及深入应用
三大数据库
珠峰博客


git的应用
git的使用
创建版本库
    1.先创建一个空目录，然后进入此目录(mkdir 文件名)
    2.点击右键选择git-bash打开命令行
    3.git init命令把这个目录变成git可以管理的仓库
    “如果美誉看到git目录，那是因为这个目录默认是隐藏的，用ls -al命令就可以看见”
git工作流
    工作区(硬盘上实际的物理目录) -》git add 文件名(到达暂存区)      暂存区 -》git commit -m '这里是注释'  (到达历史区) 历史区

从本地推送到远程github上面(第一次的时候用这两句代克隆码，要是下一次的时候直接添加提交后就可以用最后一句的代码了,nodenote这个是文件名)
$ git remote add origin https://github.com/peonyhu/nodenote.git
$ git push -u origin master

要是你用其他人的地址，并没有权限的话，先在github上面fork后弄到自己的仓库地址在进行下面的操作
1.克隆你fork后的项目,git clone 仓库地址
2.修改工作区文件，添加你的练习
3.git add -A    提交到暂存区
4.git commit -m '提交作业'  提交到历史区
5.git push origin master    推送到本人的github上
6.发一个pull request
7.由讲师合并代码


学习github的练习
http://learngitbranching.js.org/

echo xxx > yyy.txt表示把xxx内容保存到yyy.txt中，你也可以打开记事本进行编辑，手工把xxx写入yyy.txt中并保存
例如：
$ echo 1 > index.html // 把1输出到新创建的index.html文件中 > 表示清空并写入
$ echo 2 >> index.html //把2加到index.html中  >> 表示在原来文件的末尾追加
$ cat index.html //查看文件内容

创建新文件
touch index.js

告诉有文件被修改过
git status 
git diff 查看工作区和暂存区的差别
git diff HEAD 查看工作区和HEAD(当前工作分支)相比的差异
git diff --cached 查看暂存区和历史区的差异

删除一个内容
rm -rf 文件名

查看提交的历史(分支合并图)
git log --oneline --graph(显示图形) --decorate(当前提交的分支名和head指针指向) --all(显示所有分支)

git commit -a -m "" 添加并提交
.git目录存放的是暂存区和历史区，不属于工作区，除此之外都属于工作区

创建dev分支，并切换到dev分支
git checkout -b dev
==>git branch dev   创建分支
   git checkout dev 切换到dev分支
查看当前分支
git branch

用于合并并指定分支到当前分支
git merge 分支名

合并完成后删除dev分支
git branch -d dev


当我们修改很多但是只想提交一个的时候我们可以用
git log --oneline   查看提交的日志
git cherry-pick 提交的那个日志号

标签
git tag v1.0    新标签
git tag         查看标签
git tag -a(标签名) v0.8 -m "merge with no-ff" beebf73   创建带有说明的标签

git remote      查看远程库信息
git remote -v   显示更详细的信息

npm config ls   查看配置文件的路径   设置全局安装的目录   设置代理
npm install -g '文件名'   全局安装第三方文件
npm install '文件名'   本地安装讲一个模块下载到当前目录的node_modules子目录，然后只有在当前目录和他的子目录之中，才能调用这个模块